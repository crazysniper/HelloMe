黑马程序员 http://www.cnblogs.com/i-datou/p/?page=1
http://blog.csdn.net/tkd03072010/article/details/7475910
http://www.cjsdn.net/
我个人比较讨厌这种写法 <a href= " <%=request.getContextPath()%> /ServerletName "> xxx </a> 
这样既暴露你的请求名与参数并且也不重用. 
我的习惯是 <a href= "javascript:method(); "> </a> 
function method(){ 
//如果是有form那就直接用form.submit(); 
//如果没有form那就用location.href= "这里就跟你的请求对象 "; 
} 


CSDN下载免积分 http://bbs.csdn.net/topics/390674613

http://blog.csdn.net/tkd03072010/article/details/7026429
有用的分页 http://blog.csdn.net/tkd03072010/article/details/7475910

href 链接到不同类型的页面  http://www.monmonkey.com/rumenpian/wwwjichu5.html
在url中使用&要转义  &——>>&amp;
jdbc:mysql://localhost:3306/jd1206db?useUnicode=true&amp;characterEncoding=utf8

http://blog.csdn.net/chinajust/article/category/368161

Struts2.x里面感叹号是调用action里面指定的方法，比如xx.action!userAdd表示调用 xx.action里面的userAdd方法，我不知道你的url里面是不是这样的。
Struts 2 s 标签大全  http://my.oschina.net/u/265431/blog/78997
在 WebWork2 中，可以使用感叹号（！）来指定要执行（或调用）非 execute 方法，但是还没有一个真正的术语该种方式的定义。在 s2 的讨论中，我们定义了“动态方法调用”这个术语来描述 webwork/s2 对感叹号的使用。 

动态方法调用（ DMI ）通过在 action 名称和要调用的 Action 方法之间添加一个感叹号进行分割，以表示调用 action 中指定的方法（非 exeucte 方法）。如：“ Category ！ create.action ”，表示调用 Category Action 中定义的 create 方法。 

<s:form namespace="/" action="update!update" theme="simple">

当使用type＝“redirectAction” 或type＝“redirect”提交到一个action并且需要传递一个参数时。这里是有区别的： 
使用type＝“redirectAction”时，结果就只能写Action的配置名，不能带有后缀:“.action” 
Java代码 
        
<action name="Login" class="steven.actions.LoginAction">   
  <result name="success" type="<SPAN class=hilite1>redirect</SPAN>Action">User?u_id=${loginBean.u_id}</result>   
</action>  

     
<action name="Login" class="steven.actions.LoginAction">
  <result name="success" type="redirectAction">User?u_id=${loginBean.u_id}</result>
</action>
使用type＝“redirect”时，结果应是action配置名＋后缀名 
Java代码 
<action name="Login" class="steven.actions.LoginAction">   
   <result name="success" type="<SPAN class=hilite1>redirect</SPAN>">User.action?u_id=${loginBean.u_id}</result>   
</action> 





http://www.cnblogs.com/weisteve/archive/2012/01/02/2309750.html
http://www.cnblogs.com/weisteve/archive/2012/01/04/2311477.html
http://baike.baidu.com/link?url=XitTRoQeOxi5HRKPMRZgAf7gbwgP0gbxWmNaLoxMwQBf-mMVnQF4rLazfw1Adb22
http://www.cnblogs.com/liuxi/archive/2007/02/06/642379.html


Configuration config=new Configuration().configure();
SessionFactory sessionfactory=config.buildSessionFactory();
Session session=sessionfactory.openSession();
Transaction tx=session.beginTransaction();
try{
	session.save();
	tx.commit();
}catch(Exception e){
	if(tx!=null) tx.rollback();
}finally{
	session.close ();
}




http://blog.csdn.net/yingjiebohe/article/details/8283185
http://blog.csdn.net/yingjiebohe/article/details/8283206


hibernate工作原理：
1、通过Configuration().configure();读取并解析hibernate.cfg.xml配置文件。
2、由hibernate.cfg.xml中的<mappingresource="com/xx/User.hbm.xml"/>读取解析映射信息。
3、通过config.buildSessionFactory();//得到sessionFactory。
4、sessionFactory.openSession();//得到session。
5、session.beginTransaction();//开启事务。
6、persistent operate;
7、session.getTransaction().commit();//提交事务
8、关闭session;
9、关闭sessionFactory;
hibernate优点：
1、封装了jdbc，简化了很多重复性代码。
2、简化了DAO层编码工作，使开发更对象化了。
3、移植性好，支持各种数据库，如果换个数据库只要在配置文件中变换配置就可以了，不用改变hibernate代码。
4、支持透明持久化，因为hibernate操作的是纯粹的（pojo）java类，没有实现任何接口，没有侵入性。所以说它是一个轻量级框架

http://blog.knowsky.com/257681.htm

增 session.save(Object o)
   session.flush();
改 session.update(Object o)  /id不可少，Hibernate只通过id来查找数据库
  
        Session session = CommonUtil.getSessionFactory().openSession();
        Transaction tx = session.beginTransaction();
        SQLQuery query = session.createSQLQuery(sql);
        query.addEntity(Member.class);
        // 设置参数
        query.setInteger(0, member.getLoginStatus());
        // 设置缓存
        query.setCacheable(true);
        // 执行更新
        query.executeUpdate();
        // 清理缓存
        session.flush();
        // 提交事务
        tx.commit();
        // session关闭
        CommonUtil.closeSession(session);

删 session.delete(Object o)

查：指定id	Session session=CommomUtil.getSessionFactory().openSession();
		SQLQuery query = session.createSQLQuery(sql);
		query.addEntity(实体类名.class);
		//设置缓存
		query.setCacheable(true);
		//设置参数
		query.setString(0,id);
		实体类名 对象=(实体类名)query.uniqueResult();
		CommonUtil.closeSession(session);
		return 对象;



    全部信息	Session session=CommonUtil.getSessionFactory().openSession();
		SQLQuery query =session.createSQLQuery(sql);
		query.addEntity(实体类名.class);
		//设置缓存
		query.setCacheable(true);
		List<实体类名> list=query.list();
		CommonUtil.closeSession(session);
		return list;


分页  http://www.cnblogs.com/fzx888888/archive/2011/05/15/hibernate_Paging.html
http://blog.sina.com.cn/s/blog_7096a4800100pk99.html
http://www.oschina.net/code/snippet_113190_7761
http://sarin.iteye.com/blog/703537/

http://wenku.baidu.com/link?url=pZvgnrrnB0-okUc_jaAQQNYO0UIs7IQpkWKXHO1S0Y4UJmKQLJi1n2k_2_4U-C_kghbqyIa2qQLdN3Sn3QDUtAJWzVVjQobaEBoHo2cNSnq
http://blog.csdn.net/a352193394/article/details/7877930

Android
http://www.cnblogs.com/skynet/archive/2010/07/20/1781644.html
http://www.cnblogs.com/menlsh/tag/Android/
http://www.cnblogs.com/pigzhu-qi/articles/2994472.html
http://www.cnblogs.com/menlsh/archive/2012/10/07/2714235.html
http://www.cnblogs.com/menlsh/archive/2012/11/24/2786604.html
http://blog.csdn.net/column/details/flowingflying02.html?page=7
http://www.cnblogs.com/agrimony/articles/3203085.html

http://www.cnblogs.com/janehlp/archive/2012/11/27/2790168.html
http://www.cnblogs.com/steven9801/archive/2013/06/04/3116872.html
http://www.cnblogs.com/feifei1010/archive/2013/01/30/2883450.html
http://www.cnblogs.com/riasky/p/3431126.html
http://www.cnblogs.com/zhangdongzi/archive/2011/04/19/2020688.html
在线音乐播放器 http://www.cnblogs.com/zhangdongzi/archive/2012/01/17/2324762.html
http://www.apkbus.com/forum.php?mod=viewthread&tid=143218


正则表达式
exc  match 区别
http://www.jb51.net/article/46378.htm
http://blog.csdn.net/cjh200102/article/details/6100013

http://www.jb51.net/article/28007.htm


http://www.oschina.net/code/snippet_113190_7761